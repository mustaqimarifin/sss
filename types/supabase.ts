/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/sce_comments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comments.id"];
          created_at?: parameters["rowFilter.sce_comments.created_at"];
          topic?: parameters["rowFilter.sce_comments.topic"];
          comment?: parameters["rowFilter.sce_comments.comment"];
          user_id?: parameters["rowFilter.sce_comments.user_id"];
          parent_id?: parameters["rowFilter.sce_comments.parent_id"];
          mentioned_user_ids?: parameters["rowFilter.sce_comments.mentioned_user_ids"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sce_comments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sce_comments */
          sce_comments?: definitions["sce_comments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comments.id"];
          created_at?: parameters["rowFilter.sce_comments.created_at"];
          topic?: parameters["rowFilter.sce_comments.topic"];
          comment?: parameters["rowFilter.sce_comments.comment"];
          user_id?: parameters["rowFilter.sce_comments.user_id"];
          parent_id?: parameters["rowFilter.sce_comments.parent_id"];
          mentioned_user_ids?: parameters["rowFilter.sce_comments.mentioned_user_ids"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comments.id"];
          created_at?: parameters["rowFilter.sce_comments.created_at"];
          topic?: parameters["rowFilter.sce_comments.topic"];
          comment?: parameters["rowFilter.sce_comments.comment"];
          user_id?: parameters["rowFilter.sce_comments.user_id"];
          parent_id?: parameters["rowFilter.sce_comments.parent_id"];
          mentioned_user_ids?: parameters["rowFilter.sce_comments.mentioned_user_ids"];
        };
        body: {
          /** sce_comments */
          sce_comments?: definitions["sce_comments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/sce_comment_reactions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comment_reactions.id"];
          created_at?: parameters["rowFilter.sce_comment_reactions.created_at"];
          comment_id?: parameters["rowFilter.sce_comment_reactions.comment_id"];
          user_id?: parameters["rowFilter.sce_comment_reactions.user_id"];
          reaction_type?: parameters["rowFilter.sce_comment_reactions.reaction_type"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sce_comment_reactions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sce_comment_reactions */
          sce_comment_reactions?: definitions["sce_comment_reactions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comment_reactions.id"];
          created_at?: parameters["rowFilter.sce_comment_reactions.created_at"];
          comment_id?: parameters["rowFilter.sce_comment_reactions.comment_id"];
          user_id?: parameters["rowFilter.sce_comment_reactions.user_id"];
          reaction_type?: parameters["rowFilter.sce_comment_reactions.reaction_type"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comment_reactions.id"];
          created_at?: parameters["rowFilter.sce_comment_reactions.created_at"];
          comment_id?: parameters["rowFilter.sce_comment_reactions.comment_id"];
          user_id?: parameters["rowFilter.sce_comment_reactions.user_id"];
          reaction_type?: parameters["rowFilter.sce_comment_reactions.reaction_type"];
        };
        body: {
          /** sce_comment_reactions */
          sce_comment_reactions?: definitions["sce_comment_reactions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pages": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          slug?: parameters["rowFilter.pages.slug"];
          url?: parameters["rowFilter.pages.url"];
          views?: parameters["rowFilter.pages.views"];
          updated_at?: parameters["rowFilter.pages.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pages"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pages */
          pages?: definitions["pages"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          slug?: parameters["rowFilter.pages.slug"];
          url?: parameters["rowFilter.pages.url"];
          views?: parameters["rowFilter.pages.views"];
          updated_at?: parameters["rowFilter.pages.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          slug?: parameters["rowFilter.pages.slug"];
          url?: parameters["rowFilter.pages.url"];
          views?: parameters["rowFilter.pages.views"];
          updated_at?: parameters["rowFilter.pages.updated_at"];
        };
        body: {
          /** pages */
          pages?: definitions["pages"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/sce_reactions": {
    get: {
      parameters: {
        query: {
          type?: parameters["rowFilter.sce_reactions.type"];
          created_at?: parameters["rowFilter.sce_reactions.created_at"];
          label?: parameters["rowFilter.sce_reactions.label"];
          url?: parameters["rowFilter.sce_reactions.url"];
          metadata?: parameters["rowFilter.sce_reactions.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sce_reactions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sce_reactions */
          sce_reactions?: definitions["sce_reactions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          type?: parameters["rowFilter.sce_reactions.type"];
          created_at?: parameters["rowFilter.sce_reactions.created_at"];
          label?: parameters["rowFilter.sce_reactions.label"];
          url?: parameters["rowFilter.sce_reactions.url"];
          metadata?: parameters["rowFilter.sce_reactions.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          type?: parameters["rowFilter.sce_reactions.type"];
          created_at?: parameters["rowFilter.sce_reactions.created_at"];
          label?: parameters["rowFilter.sce_reactions.label"];
          url?: parameters["rowFilter.sce_reactions.url"];
          metadata?: parameters["rowFilter.sce_reactions.metadata"];
        };
        body: {
          /** sce_reactions */
          sce_reactions?: definitions["sce_reactions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/sce_comment_reactions_metadata": {
    get: {
      parameters: {
        query: {
          comment_id?: parameters["rowFilter.sce_comment_reactions_metadata.comment_id"];
          reaction_type?: parameters["rowFilter.sce_comment_reactions_metadata.reaction_type"];
          reaction_count?: parameters["rowFilter.sce_comment_reactions_metadata.reaction_count"];
          active_for_user?: parameters["rowFilter.sce_comment_reactions_metadata.active_for_user"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sce_comment_reactions_metadata"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/sce_display_users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_display_users.id"];
          name?: parameters["rowFilter.sce_display_users.name"];
          handle?: parameters["rowFilter.sce_display_users.handle"];
          avatar?: parameters["rowFilter.sce_display_users.avatar"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sce_display_users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sce_display_users */
          sce_display_users?: definitions["sce_display_users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_display_users.id"];
          name?: parameters["rowFilter.sce_display_users.name"];
          handle?: parameters["rowFilter.sce_display_users.handle"];
          avatar?: parameters["rowFilter.sce_display_users.avatar"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_display_users.id"];
          name?: parameters["rowFilter.sce_display_users.name"];
          handle?: parameters["rowFilter.sce_display_users.handle"];
          avatar?: parameters["rowFilter.sce_display_users.avatar"];
        };
        body: {
          /** sce_display_users */
          sce_display_users?: definitions["sce_display_users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/sce_comments_with_metadata": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comments_with_metadata.id"];
          created_at?: parameters["rowFilter.sce_comments_with_metadata.created_at"];
          topic?: parameters["rowFilter.sce_comments_with_metadata.topic"];
          comment?: parameters["rowFilter.sce_comments_with_metadata.comment"];
          user_id?: parameters["rowFilter.sce_comments_with_metadata.user_id"];
          parent_id?: parameters["rowFilter.sce_comments_with_metadata.parent_id"];
          mentioned_user_ids?: parameters["rowFilter.sce_comments_with_metadata.mentioned_user_ids"];
          replies_count?: parameters["rowFilter.sce_comments_with_metadata.replies_count"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sce_comments_with_metadata"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sce_comments_with_metadata */
          sce_comments_with_metadata?: definitions["sce_comments_with_metadata"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comments_with_metadata.id"];
          created_at?: parameters["rowFilter.sce_comments_with_metadata.created_at"];
          topic?: parameters["rowFilter.sce_comments_with_metadata.topic"];
          comment?: parameters["rowFilter.sce_comments_with_metadata.comment"];
          user_id?: parameters["rowFilter.sce_comments_with_metadata.user_id"];
          parent_id?: parameters["rowFilter.sce_comments_with_metadata.parent_id"];
          mentioned_user_ids?: parameters["rowFilter.sce_comments_with_metadata.mentioned_user_ids"];
          replies_count?: parameters["rowFilter.sce_comments_with_metadata.replies_count"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sce_comments_with_metadata.id"];
          created_at?: parameters["rowFilter.sce_comments_with_metadata.created_at"];
          topic?: parameters["rowFilter.sce_comments_with_metadata.topic"];
          comment?: parameters["rowFilter.sce_comments_with_metadata.comment"];
          user_id?: parameters["rowFilter.sce_comments_with_metadata.user_id"];
          parent_id?: parameters["rowFilter.sce_comments_with_metadata.parent_id"];
          mentioned_user_ids?: parameters["rowFilter.sce_comments_with_metadata.mentioned_user_ids"];
          replies_count?: parameters["rowFilter.sce_comments_with_metadata.replies_count"];
        };
        body: {
          /** sce_comments_with_metadata */
          sce_comments_with_metadata?: definitions["sce_comments_with_metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/viewcount": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            page_slug: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/viewcounturl": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            page_url: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  sce_comments: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    topic: string;
    /** Format: character varying */
    comment: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `sce_display_users.id`.<fk table='sce_display_users' column='id'/>
     */
    user_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `sce_comments.id`.<fk table='sce_comments' column='id'/>
     */
    parent_id?: string;
    /** Format: ARRAY */
    mentioned_user_ids: unknown[];
  };
  sce_comment_reactions: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `sce_comments.id`.<fk table='sce_comments' column='id'/>
     */
    comment_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `sce_display_users.id`.<fk table='sce_display_users' column='id'/>
     */
    user_id: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `sce_reactions.type`.<fk table='sce_reactions' column='type'/>
     */
    reaction_type: string;
  };
  pages: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    slug: string;
    /** Format: text */
    url?: string;
    /**
     * Format: bigint
     * @default 1
     */
    views: number;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
  };
  sce_reactions: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    type: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    label: string;
    /** Format: character varying */
    url: string;
    /** Format: jsonb */
    metadata?: unknown;
  };
  sce_comment_reactions_metadata: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `sce_comments.id`.<fk table='sce_comments' column='id'/>
     */
    comment_id?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `sce_reactions.type`.<fk table='sce_reactions' column='type'/>
     */
    reaction_type?: string;
    /** Format: bigint */
    reaction_count?: number;
    /** Format: boolean */
    active_for_user?: boolean;
  };
  sce_display_users: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: text */
    name?: string;
    /** Format: text */
    handle?: string;
    /** Format: text */
    avatar?: string;
  };
  sce_comments_with_metadata: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: character varying */
    topic?: string;
    /** Format: character varying */
    comment?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `sce_display_users.id`.<fk table='sce_display_users' column='id'/>
     */
    user_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `sce_comments.id`.<fk table='sce_comments' column='id'/>
     */
    parent_id?: string;
    /** Format: ARRAY */
    mentioned_user_ids?: unknown[];
    /** Format: bigint */
    replies_count?: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description sce_comments */
  "body.sce_comments": definitions["sce_comments"];
  /** Format: uuid */
  "rowFilter.sce_comments.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.sce_comments.created_at": string;
  /** Format: character varying */
  "rowFilter.sce_comments.topic": string;
  /** Format: character varying */
  "rowFilter.sce_comments.comment": string;
  /** Format: uuid */
  "rowFilter.sce_comments.user_id": string;
  /** Format: uuid */
  "rowFilter.sce_comments.parent_id": string;
  /** Format: ARRAY */
  "rowFilter.sce_comments.mentioned_user_ids": string;
  /** @description sce_comment_reactions */
  "body.sce_comment_reactions": definitions["sce_comment_reactions"];
  /** Format: uuid */
  "rowFilter.sce_comment_reactions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.sce_comment_reactions.created_at": string;
  /** Format: uuid */
  "rowFilter.sce_comment_reactions.comment_id": string;
  /** Format: uuid */
  "rowFilter.sce_comment_reactions.user_id": string;
  /** Format: character varying */
  "rowFilter.sce_comment_reactions.reaction_type": string;
  /** @description pages */
  "body.pages": definitions["pages"];
  /** Format: bigint */
  "rowFilter.pages.id": string;
  /** Format: text */
  "rowFilter.pages.slug": string;
  /** Format: text */
  "rowFilter.pages.url": string;
  /** Format: bigint */
  "rowFilter.pages.views": string;
  /** Format: timestamp with time zone */
  "rowFilter.pages.updated_at": string;
  /** @description sce_reactions */
  "body.sce_reactions": definitions["sce_reactions"];
  /** Format: character varying */
  "rowFilter.sce_reactions.type": string;
  /** Format: timestamp with time zone */
  "rowFilter.sce_reactions.created_at": string;
  /** Format: character varying */
  "rowFilter.sce_reactions.label": string;
  /** Format: character varying */
  "rowFilter.sce_reactions.url": string;
  /** Format: jsonb */
  "rowFilter.sce_reactions.metadata": string;
  /** @description sce_comment_reactions_metadata */
  "body.sce_comment_reactions_metadata": definitions["sce_comment_reactions_metadata"];
  /** Format: uuid */
  "rowFilter.sce_comment_reactions_metadata.comment_id": string;
  /** Format: character varying */
  "rowFilter.sce_comment_reactions_metadata.reaction_type": string;
  /** Format: bigint */
  "rowFilter.sce_comment_reactions_metadata.reaction_count": string;
  /** Format: boolean */
  "rowFilter.sce_comment_reactions_metadata.active_for_user": string;
  /** @description sce_display_users */
  "body.sce_display_users": definitions["sce_display_users"];
  /** Format: uuid */
  "rowFilter.sce_display_users.id": string;
  /** Format: text */
  "rowFilter.sce_display_users.name": string;
  /** Format: text */
  "rowFilter.sce_display_users.handle": string;
  /** Format: text */
  "rowFilter.sce_display_users.avatar": string;
  /** @description sce_comments_with_metadata */
  "body.sce_comments_with_metadata": definitions["sce_comments_with_metadata"];
  /** Format: uuid */
  "rowFilter.sce_comments_with_metadata.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.sce_comments_with_metadata.created_at": string;
  /** Format: character varying */
  "rowFilter.sce_comments_with_metadata.topic": string;
  /** Format: character varying */
  "rowFilter.sce_comments_with_metadata.comment": string;
  /** Format: uuid */
  "rowFilter.sce_comments_with_metadata.user_id": string;
  /** Format: uuid */
  "rowFilter.sce_comments_with_metadata.parent_id": string;
  /** Format: ARRAY */
  "rowFilter.sce_comments_with_metadata.mentioned_user_ids": string;
  /** Format: bigint */
  "rowFilter.sce_comments_with_metadata.replies_count": string;
}

export interface operations {}

export interface external {}
